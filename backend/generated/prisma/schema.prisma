// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  votes     Vote[]
  feedbacks Feedback[]
}

model Poll {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  options     PollOption[]
  createdAt   DateTime     @default(now())
  isActive    Boolean      @default(true)
}

model PollOption {
  id     Int    @id @default(autoincrement())
  text   String
  poll   Poll   @relation(fields: [pollId], references: [id])
  pollId Int
  votes  Vote[]
}

model Vote {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  pollOption   PollOption @relation(fields: [pollOptionId], references: [id])
  pollOptionId Int
  votedAt      DateTime   @default(now())
}

model Feedback {
  id        Int      @id @default(autoincrement())
  message   String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
